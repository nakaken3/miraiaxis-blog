name: Deploy blog to Xserver (FTPS)

on:
  push:
    branches: ["main"]
  workflow_dispatch: {}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - uses: peaceiris/actions-hugo@v3
        with:
          hugo-version: "latest"
          extended: true

      - name: Build site
        run: |
          hugo env
          hugo --gc --minify --cleanDestinationDir --baseURL "https://miraiaxis.com/blog/"

      # 先に疎通テスト（原因切り分け）
      - name: Debug connectivity to Xserver FTPS
        run: |
          sudo apt-get update
          sudo apt-get install -y dnsutils netcat-openbsd openssl
          echo "=== DNS ===";  dig +short sv7487.xserver.jp || true
          echo "=== TCP connect to :21 ===";  nc -vz -w 10 sv7487.xserver.jp 21 || true
          echo "=== TLS handshake (Explicit FTPS) ==="
          openssl s_client -starttls ftp -connect sv7487.xserver.jp:21 -tls1_2 -brief || true

      - name: Install lftp
        run: |
          sudo apt-get update
          sudo apt-get install -y lftp

      - name: Deploy via FTPS (lftp)
        env:
          FTP_HOST: ${{ secrets.FTP_HOST }} # 例: sv7487.xserver.jp
          FTP_USER: ${{ secrets.FTP_USER }} # 例: ftp@mirainozaki.xsrv.jp
          FTP_PASSWORD: ${{ secrets.FTP_PASSWORD }}
        run: |
          lftp -u "$FTP_USER","$FTP_PASSWORD" "$FTP_HOST" <<'EOF'
          set ftp:ssl-force true
          set ftp:ssl-protect-data true
          set ftp:passive-mode true
          set net:max-retries 2
          set net:timeout 30
          cd blog
          pwd
          ls -la
          lcd public
          mirror -R --delete --verbose . .
          ls -la
          bye
          EOF

      - name: Show config
        run: hugo config | sed -n '1,120p'

      - name: Sanity check build
        run: |
          test -s public/index.html
          # 直近のコミットで content/posts/ を触っていたら、index.json に /blog/posts/ があるか軽く確認
          if git diff --name-only HEAD~1..HEAD | grep -q '^content/posts/'; then
            if ! grep -q '"/blog/posts/' public/index.json; then
              echo "::warning ::No posts found in index.json (draft:true か 未来日付の可能性)"
            fi
          fi
